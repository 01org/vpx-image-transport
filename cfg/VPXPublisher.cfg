#!/usr/bin/env python

PACKAGE='vpx_image_transport'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

rate_control_mode_enum = gen.enum([
  gen.const("RATE_CTRL_MODE_VBR", int_t, 0, "Variable Bit Rate (VBR) mode"),
  gen.const("RATE_CTRL_MODE_CBR", int_t, 1, "Constant Bit Rate (CBR) mode"),
  gen.const("RATE_CTRL_MODE_CQ", int_t, 2, "Constrained Quality (CQ) mode"),
  gen.const("RATE_CTRL_MODE_Q", int_t, 3, "Constant Quality (Q) mode"),
], "Rate control mode")

keyframe_mode_enum = gen.enum([
  gen.const("KF_MODE_DISABLED", int_t, 0, "Encoder does not place keyframes"),
  gen.const("KF_MODE_AUTO", int_t, 1, "Encoder determines optimal placement automatically"),
], "Keyframe placement mode")

gen.add("threads", int_t, 0, "Maximum number of threads", 1, 1, 4)
gen.add("end_usage", int_t, 0, "Rate control algorithm", 0, 0, 3, edit_method=rate_control_mode_enum)
gen.add("target_bitrate", int_t, 0, "Target data rate, KB/s", 1024, 1, 524288)
gen.add("keyframe_mode", int_t, 0, "Keyframe placement mode", 1, 0, 1, edit_method=keyframe_mode_enum)
gen.add("keyframe_forced_interval", int_t, 0, "Forced keyframe interval", 4, 1, 1024)
gen.add("keyframe_min_interval", int_t, 0, "Keyframe minimum interval", 0, 0, 1024)
gen.add("keyframe_max_interval", int_t, 0, "Keyframe maximum interval", 128, 0, 1024)

exit(gen.generate(PACKAGE, "VPXPublisher", "VPXPublisher"))

